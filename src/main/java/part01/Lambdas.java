package part01;

import java.time.LocalDate;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;

public class Lambdas {

    // List of words generated by ChatGPT, (GPT-3.5)
    public static final List<String> words = new ArrayList<>(List.of("Algorithm", "Variable", "Function", "Class",
            "Object", "Array", "Loop"));

    public static Runnable printWelcome = () -> System.out.println("Welcome to this super fancy application!");

    public static Consumer<Object> print = obj -> System.out.println(obj);

    public static Supplier<String> currentTime = () -> ZonedDateTime.now().format(DateTimeFormatter.RFC_1123_DATE_TIME);
    public static Consumer<String> logText = (text) -> System.out
            .println("%s: %s".formatted(currentTime.get(), text));
    public static Predicate<Integer> isEven = num -> num % 2 == 0;
    public static Predicate<Integer> isOdd = isEven.negate();

    public static Supplier<String> monthName = () -> LocalDate.now().getMonth().name();
    public static Supplier<String> dayOfWeek = () -> LocalDate.now().getDayOfWeek().name();

    public static Function<String, String> htmlComment = (text) -> "<!-- %s -->".formatted(text);
    public static UnaryOperator<String> reverse = text -> new StringBuilder(text).reverse().toString();
    public static Function<String, String> convertCommas = text -> text.replaceAll(",", ".");
    public static Comparator<String> lengthComparator = (a, b) -> a.length() - b.length();

    public static void main(String[] args) {

        printWelcome.run();

        logText.accept("Hello world");

        System.out.println(isEven.test(2020));

        words.forEach(logText);

        System.out.println(monthName.get() + " " + dayOfWeek.get());

        System.out.println(htmlComment.apply("this needs to be fixed later"));

        words.replaceAll(reverse);
        words.forEach(System.out::println);

        double sum = List.of("3,14", "3,50").stream().map(convertCommas).mapToDouble(Double::parseDouble).sum();
        System.out.println(sum);

        ArrayList<String> texts = new ArrayList<>(List.of("foo", "example", "a"));
        texts.sort(lengthComparator);
        texts.forEach(print);
    }
}
