package part02;

import java.util.List;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class StringStreams {

    // List of words generated by ChatGPT, (GPT-3.5)
    public static final List<String> words = List.of("Algorithm", "Variable", "Function", "Class", "Object", "Array",
            "Loop", "Conditional", "Inheritance", "Polymorphism", "Abstraction", "Encapsulation", "Compiler",
            "Interpreter", "Debugger", "Framework", "Library", "Version Control", "Database", "API", "Bug", "Testing",
            "Debugging", "Syntax", "Java", "Python", "C++", "JavaScript", "HTML", "CSS");

    /**
     * Returns a stream of all the words in the list defined in this class.
     *
     * @return a Stream of all words
     */
    public Stream<String> streamAllWords() {
        return null;
    }

    /**
     * Returns a stream of words defined in this class that start with the specified
     * substring.
     *
     * @param substring the substring to filter by
     * @return a Stream of words starting with the given substring
     */
    public Stream<String> streamWordsStartingWith(String substring) {
        return null;
    }

    /**
     * Returns a stream of words defined in this class that include the specified
     * substring in a case-insensitive way.
     *
     * @param substring the substring to filter by
     * @return a Stream of words including the given substring
     */
    public Stream<String> streamWordsIncludingSubstring(String substring) {
        return null;  // TODO: Implement this method
    }

    /**
     * Returns a stream of words defined in this class that DO NOT include the
     * specified substring in a case-insensitive way.
     *
     * @param excludeSubstring the substring to exclude by
     * @return a Stream of words not the given substring
     */
    public Stream<String> streamWordsNotIncludingSubstring(String excludeSubstring) {
        return null;
    }

    /**
     * Returns a stream of words defined in this class in uppercase.
     *
     * @return a Stream of words in uppercase
     */
    public Stream<String> streamWordsInUppercase() {
        return null;
    }

    /**
     * Returns a stream of words defined in this class in lowercase.
     *
     * @return a Stream of words in lowercase
     */
    public Stream<String> streamWordsInLowercase() {
        return null;
    }

    /**
     * Returns the lengths of each word defined in this class.
     *
     * @return
     */
    public IntStream streamLengthsOfWords() {
        return null;
    }

    /**
     * Returns a stream of strings using the FizzBuzz pattern. The stream should
     * provide at least 1 000 0000 first strings in the pattern, starting with:
     * "1", "2", "fizz", "4", "buzz"...
     *
     * @return a Stream of strings in the FizzBuzz pattern
     */
    public Stream<String> fizzBuzz() {
        return null;
    }
}
